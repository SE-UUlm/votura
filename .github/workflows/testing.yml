name: Testing

on:
  workflow_dispatch:
  push:
  merge_group:

jobs:
  test:
    name: Lint, Build & Test
    runs-on:
      labels: ubuntu-latest
    container:
      image: ubuntu:24.04
    continue-on-error: false
    timeout-minutes: 15

#    services:
#      postgres:
#        image: postgres:17.4
#        env:
#          POSTGRES_USER: votura
#          POSTGRES_PASSWORD: votura
#          POSTGRES_DB: votura
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd="pg_isready -U votura"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=5

    steps:
      - name: Update & install apt packages
        run: |
          apt-get update
          apt-get install -y wget unzip
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install npm dependencies
        run: npm ci
      - name: Generate .env file
        run: |
          cd apps/backend
          echo "PEPPER=12a34" > .env
      - name: Check types
        run: npm run check-types
      - name: Check formats
        # first check files in workspaces & second the root directory
        run: |
          npm run check-format
          npx prettier --check .
      - name: Check linting
        run: |
          npm run lint
          npx eslint
      - name: Check code spell
        run: npx cspell lint **
      - name: Build votura-crypto
        run: |
          cd packages/votura-crypto
          npm run build
      - name: Build votura-validators
        run: |
          cd packages/votura-validators
          npm run build
      - name: Build backend
        run: |
          cd apps/backend
          npm run build
      - name: Build frontend
        run: |
          cd apps/frontend
          npm run build
#      - name: Setup DB
#        run: |
#          cd apps/backend
#          npm run migrate
#          npm run seed
      - name: Run tests
        run: npm run test
      - name: Teamscale Upload
        uses: cqse/teamscale-upload-action@v2.9.6
        with:
          server: 'https://exia.informatik.uni-ulm.de/teamscale'
          project: 'b3ef710d-5a48-4918-9383-7381b21e45e2'
          user: 'thorbencarl'
          accesskey: ${{ secrets.TEAMSCALE_ACCESS_KEY }}
          partition: 'Github Action > ${{ github.ref_name }} ${{ github.run_id }}'
          format: CLOVER
          message: 'Code coverage from GitHub Actions'
          files: './packages/votura-crypto/coverage/clover.xml apps/backend/coverage/clover.xml'
