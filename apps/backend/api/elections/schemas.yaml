components:
  schemas:
    #### base objects #################################################################################
    electionBaseObject:
      type: 'object'
      required:
        - name
        - description
        - private
        - votingStartAt
        - votingEndAt
        - allowInvalidVote
      properties:
        name:
          description: |
            The name of the election.
          readOnly: false
          writeOnly: false
          type: 'string'
          minLength: 1
          maxLength: 256
          pattern: '^[a-zA-Z0-9 .,\-_:;!?()\/]{1,256}$'
          example: 'A very important election'
        description:
          description: |
            The description text of the election.
            The description can be null.
          readOnly: false
          writeOnly: false
          oneOf:
            - type: 'string'
              minLength: 1
              maxLength: 256
              pattern: '^[a-zA-Z0-9 .,\-_:;!?()\/]{1,256}$'
              example: 'This is a super important description.'
            - type: 'null'
              default: null
              example: null
          additionalProperties: false
        private:
          description: |
            If `private` is set to `false` votura will store a link between the voter and his vote.
            So every vote can be traced back to the voter. 
            If `private` is set to `true` votura will not store a link between the voter and his vote.
            So the vote is anonymous and cannot be traced back to the voter.
          readOnly: false
          writeOnly: false
          type: 'boolean'
          example: false
        votingStartAt:
          description: |
            The start date of the voting process of the election.
            This date needs to be in the future.
          readOnly: false
          writeOnly: false
          type: 'string'
          format: 'date-time'
          maxLength: 20
          example: '2042-10-01T00:00:00Z'
        votingEndAt:
          description: |
            The end date of the voting process of the election.
            This date needs to be in the future and greater than the `votingStartAt` date.
          readOnly: false
          writeOnly: false
          type: 'string'
          format: 'date-time'
          maxLength: 20
          example: '2042-10-02T00:00:00Z'
        allowInvalidVote:
          description: |
            Define if a voter is allowed to submit a invalid Vote. 
            There will always a warning message shown to the voter that his vote will be invalid.
          readOnly: false
          writeOnly: false
          type: 'boolean'
          example: true
    ###################################################################################################
    electionCreateObject:
      # additionalProperties: false # not supported by docusaurus
      allOf:
        - $ref: '#/components/schemas/electionBaseObject'
    electionReadObject:
      # additionalProperties: false # not supported by docusaurus
      allOf:
        - $ref: '#/components/schemas/electionBaseObject'
        - type: 'object'
          required:
            - id
            - createdAt
            - modifiedAt
            - configFrozen
            - pubKeyVotes
            - primeP
            - primeQ
            - generator
          properties:
            id:
              description: |
                This is the unique identifier for the election.
              readOnly: true
              writeOnly: false
              type: 'string'
              format: 'uuid'
              minLength: 36
              maxLength: 36
              pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
              example: '123e4567-e89b-12d3-a456-426614174000'
            createdAt:
              description: |
                The created date of the election.
              readOnly: true
              writeOnly: false
              type: 'string'
              format: 'date-time'
              maxLength: 20
              example: '2032-10-01T00:00:00Z'
            modifiedAt:
              description: |
                The last modified date of the election.
              readOnly: true
              writeOnly: false
              type: 'string'
              format: 'date-time'
              maxLength: 20
              example: '2032-10-01T00:00:00Z'
            configFrozen:
              description: |
                Indicates if the configuration of the election is frozen.
              readOnly: false
              writeOnly: false
              type: 'boolean'
              example: false
            pubKeyVotes:
              description: |
                The public key to encrypt the vote of the voter. 
                `pubKeyVotes = generator ^ privKeyVotes mod primeP`
                This key will only be generated if the election configuration is frozen.
                If `configFrozen` is set to `false`, the key will be `null`.
              readOnly: true
              writeOnly: false
              oneOf:
                - type: 'string'
                  minLength: 0
                  maxLength: 2048
                  pattern: '^[0-9]+$'
                - type: 'null'
                  example: null
              additionalProperties: false
            primeP:
              description: |
                A large prime number that defines the group.
                This key will only be generated if the election configuration is frozen.
                If `configFrozen` is set to `false`, the key will be `null`.
              readOnly: true
              writeOnly: false
              oneOf:
                - type: 'string'
                  minLength: 2048
                  maxLength: 2048
                  pattern: '^[0-9]+$'
                - type: 'null'
                  example: null
              additionalProperties: false
            primeQ:
              description: |
                A prime number that divides `(primeP-1)`, often chosen as `primeQ=(primeP-1)/2`.
                This key will only be generated if the election configuration is frozen.
                If `configFrozen` is set to `false`, the key will be `null`.
              readOnly: true
              writeOnly: false
              oneOf:
                - type: 'string'
                  minLength: 2
                  maxLength: 1024
                  pattern: '^[0-9]+$'
                - type: 'null'
                  example: null
              additionalProperties: false
            generator:
              description: |
                The generator of the multiplicative group modulo `primeP`.
                This key will only be generated if the election configuration is frozen.
                If `configFrozen` is set to `false`, the key will be `null`.
              readOnly: true
              writeOnly: false
              oneOf:
                - type: 'string'
                  minLength: 0
                  maxLength: 2048
                  pattern: '^[0-9]+$'
                - type: 'null'
                  example: null
              additionalProperties: false
