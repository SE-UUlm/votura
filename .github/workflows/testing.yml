name: Testing

on:
  workflow_dispatch:
  push:
  merge_group:

jobs:
  test:
    name: Lint, Build & Test
    runs-on:
      labels: ubuntu-latest
    container:
      image: ubuntu:24.04
    continue-on-error: false
    timeout-minutes: 15

    steps:
      - name: Update & install apt packages
        run: |
          apt-get update
          apt-get install -y wget unzip
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install npm dependencies
        run: npm ci
      - name: Generate .env file
        run: |
          cd apps/backend
          echo "PEPPER=\"3107ee33f20c08c08e902974f845e1347d01ebf14aae9369c8700bf51688d107\"" > .env
          echo "JWT_PRIVATE_KEY = \"LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRUUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Nzd2dna25BZ0VBQW9JQ0FRRFJSclI4MjZxRWdYYnQKcE5JRU1zS3gvWUhxcXRUYmtlUS9zVEVodmp3cXVMR1d4QlhwTGZhQXRycisxVmsvNFlYaEpmK1FHbTdzSWQ4eAp5dVR3RGI1eHRHLzdhL2VYWEg1enZqN1NqaXVoUWVOQ1JxWEVVbHdrdEpXTXdMZTAvNmFpaG9YbHZnQ2d0U296CnF5eVVqRnNxQWNTQnpMcDdwcm1KNXpJNkJNMUxLMVNUTnlRMjA3emM5YzJ0T1JkUnA4L3NsMlh6dXZVK1pqNGoKczBlTG1VSHN5amF5M1IxcGplODVNWHNLQ1JCbExvQVFCUzBxVHNqNkRqbDB1SjloTTJGUlNQdWdJTlJKcGZNTQpENDc4b2YxZnVpOW9ObGRRZ3B3RTdnVXl2MkZjbDU2QnlKK2sySzhNbnA4dXBWT014bWwrdDY0Y1JaVkxHckdXCmcvSG5LWFd0SWR3S29WYWorL3FuUUpnaDJiQTVtMVRXQmpHcFNoVmFjYzF3MWovd1NqSmJ1NTF4eURpMkl3cHgKRXg2OVNIdThKdlBrNnMzTnpVYnB3bkdDSk1oWWY1aEZGYTBZREZBOWFHM3ZxdzBRcjBlQ2NYK2NrMFVPVXBiWApLaVlyYkVKM1YxYUI3eElVWVQxT2p1Y1ViNEh1VnR2bkREYUVGMHNFNEV6VlFjcU9oS1Y0Q0lTQmY2a25qK1FYCm1rNlNMR204U2hHRUZ3NS95RlNlcngrUmhjTjFYVDIxbHBQbmZQY1h0K3JmR3ljQkZRMm53dlVJVUlkd3FYcGEKZ1NSR29LekdVYXpZbm5WTU1TajIraXVFV1ZpUGxnUm9OdFdyTjBqWW1VK2tlYVIyOHgzSXFQOVcwZ0xTZFJnVwpobFU0ZFgzanY4QmJxNmp0VUhyNFRPa1BjT0VzL1FJREFRQUJBb0lDQUY2L095RzROaGd0b1JGd2FLRDc5a2V0Ck5XOXdEbFNtVlljOGlyanpMcnhNeUNJdy9wYUdkNjdJakJxcHJ2R01BaGZ3SXljendIcHB6Mm4wcVBmQjBUSWIKZGdPSFd4NE5BemNWcjgyV0RrekF6c29Id0M4RTlyQ3JqWFdmSHN6MFhaWUJmNGVISVRPaE1jMFl0Mk05dEZ4dApWbkZKcGpnclFKOGRyQkMyY2RlUmM0WC9GZ2M0ajY0ZUh4Tkk0TFRZVy91S2c5NzRDdVpJVmVQRjNDTm9ySDh2CkFkcXkzd2tWK0hPVllsWWx5bVYweXdmMXdBQUNrVjBjcVlpZHVaTEJOMU1jenNjdGRjOHVNYjZKSUx4aC9wdWoKYUtrdXlSTXJQc1hBbVZ2alo0b0xIdmsxUW9uWWpGQVRWSkJDeTNQVnRKZHBRNHVMT1U4NmM2Sm9kRkdxNUpvLwpDWHMwdC9CSURWZmVBSVlPMXRoanRRU29qbnp1NW1ocXJWcUVoN1dBZEtrWHNubkhlUjhJRjE0UkYvNm12aUFNCkprV1E3TXNvWEdVUkhZMGtkelBCK1JqNnFPakg4L2gzNE9DdWMzUnNyY3Y5TU1JT2V3ZzBNQW1jcXlQZUpkRzkKdVpQTE9WdjcrWGZaeUJlTWIzUUZLSzBUS3F5aTZlVzZIZXcwa3hESUpOUVlrMTh0Tk53TjVFTDBCa0NIS3dILwp6VnZhSW1UcDFWREJiVE9DMTJmbHJWUzlmYkpkYlMzT0xqRXBsOTlnb2k2R2cwcTZ6ckhLOXp5S01TR1JoY2dnCnRwL0JWcytveWtaK1pSS21NK1JjYmR0cFBSSUVhRFNqckI3YmNqeW51SWJNakFMcHJsMHE5R0xRb1hqbFhxZUUKbDRZeE1Vb01ORTQxQ0tRTUdmcUZBb0lCQVFEeURKdDd4aWlRdFAvY01ReThCcFRFbjlTRFdyUnRzTjRWcFRwSQpzQUg5Nnd1cHdvRUJpbDZ1U3I0OHFjV2dzdThJSmhRVGJ3NEExM3hpL3dhbURVUUt2U1dEZjFZR0FaSWh0ZjFhCjN5c29KWHJGUlNNQ1pyYlNMRHYxSXZ5d1Fid250SytFR25ZYUVBVGdNeWlyT3VzZ3pvaXJaamNNWi9MRU0wUlYKZGNiN016Vk1tSDU2UWpId2luU0lTUHU0NG5VQVVySXpHcmNnTy9DUmFNWDhHVkRQMHl3N2NWTHo1L25DYWZmOQpoUjl1UWc5dEVzUWRrSEcrUHlKSnBmcFpZeUxCWUVTM2YxZ25TdXN2UHkvbWhFN2xQSnZMZGtqWkY3eDk4ako5CkFVUW5GMjI5VEJ1UjN6V0FZT3lQMWhMTVcrbzhWcVFRc01PZjhWMVF1S1R4RkY0WEFvSUJBUURkVm9tRlNrK2IKT3IrejZoMWNibzdGc3FXMm5XREFCNDBtTlY1NXU3VjBvVTVra1FlRkV5NUlHSUUyNGVPTjluenliNi93OHVxVgpVS3hyNk1UNGRhaFA2OElvZzE2SmNobTA2NStHY0haYkJDdm0wcklhVWRhYlV5N2doV0hqRk9EZ2ZETVloR2hNCmRrR0Vxdno1bExRTmtvNXR1U2RpazdBanBNcm9TRVpETVRpWjh4c3FidHhFWFp0dzJaSmQyK2liUnNZRjB0RGsKOUwxWXZQMlA4QmVEelhweXpEdWZqbG40MFJJZWkrNmtFR1NhMjNjcDNnZXBjNWxTR0o2ZU5oVVdCRzAvMEs0MwpTUlQrTDRHNXhhaHdYTDZIRUcxNkE5c1VQWXNMMG1hdFhqNWV3NTdmSFlwVFRyM2x5bHh1cWpwdndoUHo2U3BYClVCUk13aDJWVHk0TEFvSUJBRGFxTkQ5SzdJUnA3Rkw5WE9QbUZKa25nNlk2eVA3dzcrY3hqcTAxMnUxT3RTNmMKdCtmeUtSbngxVzc3NUo4N2FoS01Ed0tvbFNBSmlwVU5CYUpnNHBvT1I3ZWYvWHlUeEQ0S3pQSkY3b2c5bHJHUQp3S3hkS0RMbFBKRkxXb2d3QUY5elJpUnVtWGVmWUlxRjQweHduUU9td1dUOFM3aG9qWUpVRmIyN1FMb2d3WXZQCjhOaUp0SitmbFZ2bUo3dUVvV24yUXpxWmNQdzlyVUlaeUlUNzdxMVJBdTlWMDZjMEg4c1JoYWxpOUV0QmJoeHoKSFltVHdxeDFzN2V3WFk3c2ZiL3dqdlJtTlRHQ2tRVDFuMHJQWE1ZVzN4U2ZYU3B5V3VhUzJXWXo4QUZvSUNlZApWYWluSVgwaDVxdEJiTE5zbXNVUHlEUGd4LzJLVkVuVHVhU2N0ZmNDZ2dFQUNSMkdQbG9JRzBGNUlhU3pudG5pCndWdVJIWXN2cjlqZnhFSVFhUDBGQlErYmxlS3ZKNWpab0JoNlFkTmR0cnYrKzFFRU11MGVJaFlYYzc0N1Ztd3EKQ1ZpUlAyL2hsZEdBSTRaTXBKRy9IaEoyNkdPbStCU0V2UkxZN0dBeDN0TStTNkJ4emtHdHRmQnMxRlRpWkRqdQpqVnlLeHhRSC9qUk0zYnJzckZKRnFvQzlid0duRGNGUkN2Tzc4aExUeDAvR0xaYmxrdG5TeG9zWnZTelRXSGt2CnpycklueSt3Q09zbzQybGcwS2M4cGI4VEZabVNOOFF3RnBkdktnVmZpdTU1UWRYZTFmRDNLOG16dHFBb1BJbGEKWFg1RVRuV3J2SW1xSFJSSHhLM2VrcWM5OUZNa0dOWXpteWkwQTJHcEd0bWgzSFptc2ZYWlM0MDl1TWVKeGx0agpid0tDQVFBeFJVSG5IcUdpS0cvRlRMRjdaZ1FkSlJoanZYUXpjaU4yQUgwajZBYTFxQ2xPZDlxZTMyNWE5dlhDCkZOSXR0Z2k5MHFMUXc4bnZsc3FYTGJoWE1QajBSNzJnREl3TnB5dkRCdEF1ckRsRTdTRjc1VjByOGVybHB4cW4KUEtWM0Y4blV3VndMaGs5S2tVbTY0VkQrT1dRQnZaUS9Qa1B1TXhNck51cmIrdGNnSG9CUTcxUWxDaHVyWDN5VgpybFRiUEZhWnFNVk1Jay84THk1SVlaSkhMV2Jkc3BsNnkvNUVZbWhBZHQ4UGZkR05VamdNMEhmNTNkU1VCWWRRCjRDY1NzSGp2OUNPMEUyZjc5d3hlN0NUZWVoSjJUNGo0ZU5zcjBHZzQ3bE8zQmpmT3E3bDJZa09KZWwySzdEYlUKdGliUjEwSktkOVNhMHhmU2RYUzVUL3I3QXpDTwotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==\" >> .env"
          echo "JWT_PUBLIC_KEY = \"LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUEwVWEwZk51cWhJRjI3YVRTQkRMQwpzZjJCNnFyVTI1SGtQN0V4SWI0OEtyaXhsc1FWNlMzMmdMYTYvdFZaUCtHRjRTWC9rQnB1N0NIZk1jcms4QTIrCmNiUnYrMnYzbDF4K2M3NCswbzRyb1VIalFrYWx4RkpjSkxTVmpNQzN0UCttb29hRjViNEFvTFVxTTZzc2xJeGIKS2dIRWdjeTZlNmE1aWVjeU9nVE5TeXRVa3pja050TzgzUFhOclRrWFVhZlA3SmRsODdyMVBtWStJN05IaTVsQgo3TW8yc3QwZGFZM3ZPVEY3Q2drUVpTNkFFQVV0S2s3SStnNDVkTGlmWVROaFVVajdvQ0RVU2FYekRBK08vS0g5Clg3b3ZhRFpYVUlLY0JPNEZNcjloWEplZWdjaWZwTml2REo2ZkxxVlRqTVpwZnJldUhFV1ZTeHF4bG9QeDV5bDEKclNIY0NxRldvL3Y2cDBDWUlkbXdPWnRVMWdZeHFVb1ZXbkhOY05ZLzhFb3lXN3VkY2NnNHRpTUtjUk1ldlVoNwp2Q2J6NU9yTnpjMUc2Y0p4Z2lUSVdIK1lSUld0R0F4UVBXaHQ3NnNORUs5SGduRi9uSk5GRGxLVzF5b21LMnhDCmQxZFdnZThTRkdFOVRvN25GRytCN2xiYjV3dzJoQmRMQk9CTTFVSEtqb1NsZUFpRWdYK3BKNC9rRjVwT2tpeHAKdkVvUmhCY09mOGhVbnE4ZmtZWERkVjA5dFphVDUzejNGN2ZxM3hzbkFSVU5wOEwxQ0ZDSGNLbDZXb0VrUnFDcwp4bEdzMko1MVRERW85dm9yaEZsWWo1WUVhRGJWcXpkSTJKbFBwSG1rZHZNZHlLai9WdElDMG5VWUZvWlZPSFY5CjQ3L0FXNnVvN1ZCNitFenBEM0RoTFAwQ0F3RUFBUT09Ci0tLS0tRU5EIFBVQkxJQyBLRVktLS0tLQo=\"" >> .env
      - name: Check types
        run: npm run check-types
      - name: Check formats
        # first check files in workspaces & second the root directory
        run: |
          npm run check-format
      - name: Check linting
        run: |
          npm run lint
          npx eslint
      - name: Check code spell
        run: npx cspell lint **
      - name: Build votura-crypto
        run: |
          cd packages/votura-crypto
          npm run build
      - name: Build votura-validators
        run: |
          cd packages/votura-validators
          npm run build
      - name: Build backend
        run: |
          cd apps/backend
          npm run build
      - name: Build frontend
        run: |
          cd apps/frontend
          npm run build
      - name: Run tests
        run: npm run test
      - name: Teamscale Upload
        uses: cqse/teamscale-upload-action@v2.9.6
        with:
          server: 'https://exia.informatik.uni-ulm.de/teamscale'
          project: 'b3ef710d-5a48-4918-9383-7381b21e45e2'
          user: 'thorbencarl'
          accesskey: ${{ secrets.TEAMSCALE_ACCESS_KEY }}
          partition: 'Github Action > ${{ github.ref_name }} ${{ github.run_id }}'
          format: CLOVER
          message: 'Code coverage from GitHub Actions'
          files: './packages/votura-crypto/coverage/clover.xml apps/backend/coverage/clover.xml'
