name: Documentation

on:
  workflow_dispatch:
  push:
  merge_group:

jobs:
  build-puml:
    name: Build UML diagrams
    runs-on:
      labels: ubuntu-latest
    container:
      image: ubuntu:22.04
    continue-on-error: false
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y curl graphviz libfreetype6 fontconfig
      - name: Download PlantUML
        run: |
          curl -L -o plantuml.jar https://github.com/plantuml/plantuml/releases/latest/download/plantuml.jar
      - name: Build PlantUML SVG files
        run: |
          find ./apps/docs/static/uml -name "*.puml" -exec java -jar plantuml.jar -tsvg {} \;
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install node dependencies
        run: npm ci
      - name: Build Prisma ERD
        run: |
          cd ./apps/backend/
          npx prisma generate
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: uml_svg
          path: |
            ./apps/docs/static/uml/*.svg
            ./apps/docs/static/uml/*.md
          retention-days: 5

  build-drawio:
    name: Build DrawIO diagrams
    runs-on:
      labels: ubuntu-latest
    container:
      image: ubuntu:22.04
    continue-on-error: false
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y wget xvfb libasound2 libgbm1 libxshmfence1 libgtk-3-0 libx11-xcb1 libnss3 libxss1 libxcomposite1 libxrandr2 libxdamage1 libxfixes3 libxcb1
          wget https://github.com/jgraph/drawio-desktop/releases/download/v24.7.17/drawio-amd64-24.7.17.deb
          apt-get install -y ./drawio-amd64-24.7.17.deb
      - name: Build DrawIO SVG files
        # DrawIO returns immediately even when the image is not finished rendered, so therefore the sleep guess.
        run: |
          xvfb-run drawio ./apps/docs/static/drawio/  --no-sandbox -x -r -o ./apps/docs/static/drawio/ -f svg -t --crop -a
          timeout=300
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: drawio_svg
          path: ./apps/docs/static/drawio/*.svg
          retention-days: 5

  build-api-schema:
    name: Build API schema
    runs-on:
      labels: ubuntu-latest
    container:
      image: ubuntu:22.04
    continue-on-error: false
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build api schema
        run: |
          cd ./packages/votura-validators/
          npm run build
          npm run persist-schema
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: api_schema
          path: ./packages/votura-validators/generated/voturaApiSchema.json
          retention-days: 5

  build:
    name: Build documentation
    needs: ['build-puml', 'build-drawio']
    runs-on:
      labels: ubuntu-latest
    container:
      image: ubuntu:22.04
    continue-on-error: false
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Download all docs artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./apps/docs/static/
      - run: cp -r ./apps/docs/static/uml_svg/* ./apps/docs/static/uml/
      - run: cp -r ./apps/docs/static/drawio_svg/* ./apps/docs/static/drawio/
      - name: Download all votura-validators artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./packages/votura-validators/
      - run: cp -r ./packages/votura-validators/generated/* ./packages/votura-validators/generated/
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: |
          cd ./apps/docs/
          npm run build
      - name: Upload Build Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./apps/docs/build

  deploy:
    name: Deploy documentation
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on:
      labels: ubuntu-latest
    container:
      image: ubuntu:22.04
    continue-on-error: false
    timeout-minutes: 10

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
