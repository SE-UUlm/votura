name: Testing API

on:
  workflow_dispatch:
  push:
  merge_group:

jobs:
  test:
    name: Testing API Endpoints
    runs-on:
      labels: ubuntu-latest
    container:
      image: ubuntu:24.04
    continue-on-error: false
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:17.4
        env:
          POSTGRES_USER: votura
          POSTGRES_PASSWORD: votura
          POSTGRES_DB: votura
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U votura"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Update & install apt packages
        run: |
          apt-get update
          apt-get install -y wget unzip
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: npm
          cache-dependency-path: package-lock.json
      - name: Install npm dependencies
        run: npm ci
      - name: Build votura-crypto
        run: |
          cd packages/votura-crypto
          npm run build
      - name: Build votura-validators
        run: |
          cd packages/votura-validators
          npm run build
      - name: Build backend
        run: |
          cd apps/backend
          npm run build
      - name: Generate .env file
        run: |
          cd apps/backend
          echo "DATABASE_URL=postgresql://votura:votura@postgres:5432/votura?schema=public" > .env
      - name: Setup DB
        run: |
          cd apps/backend
          npm run migrate
          npm run seed
      - name: Run API tests
        run: |
          cd apps/backend
          npm run start &
          sleep 5
          npm run test-api
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: 'apps/backend/tests_api/Votura-API/results/*xml'
        if: always()
