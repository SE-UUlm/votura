@startuml dataModel

entity "User" as user #006b75 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    * email : TEXT <<UK>>
    * passwordHash : TEXT
    * verified : BOOLEAN
    lastLoginAt : TIMESTAMPTZ(6) | NULL
    ' failed login attempts get reset on successful login
    * failedLoginAttempts : INTEGER
    emailVerificationTokenHash : TEXT | NULL
    emailVerificationTokenExpiresAt : TIMESTAMPTZ(6) | NULL
    passwordResetTokenHash : TEXT | NULL
    passwordResetTokenExpiresAt : TIMESTAMPTZ(6) | NULL
    refreshTokenHash : TEXT | NULL
    refreshTokenExpiresAt : TIMESTAMPTZ(6) | NULL
    --
}

entity "AccessTokenBlacklist" as jwtBlacklist #006b75 {
    ' this table is used to store blacklisted access tokens
    ' The jti is 36 characters long if we use UUIDv4
    * id : UUID <<PK>>
    --
    * accessTokenId : UUID <<UK>>
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    * expiresAt : TIMESTAMPTZ(6)
    --
}

entity "Election" as elections #b60205 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    * name : TEXT
    description : TEXT | NULL
    * private : BOOLEAN
    * votingStartAt : TIMESTAMPTZ(6)
    * votingEndAt : TIMESTAMPTZ(6)
    * configFrozen : BOOLEAN
    * allowInvalidVote : BOOLEAN
    ' Is there a use case for `votesCounted`?
    ' * votesCounted : BOOLEAN
    ' Computed values such as validVotes and invalidVotes are critical - do we really want to store them?
    ' validVotes : NUMERIC | NULL
    ' invalidVotes : NUMERIC | NULL
    pubKey : NUMERIC | NULL
    privKey : NUMERIC | NULL
    primeP : NUMERIC | NULL
    primeQ : NUMERIC | NULL
    generator : NUMERIC | NULL
    --
    * electionCreatorId : User.id <<FK>>
}

note as N2
The result of one election is intended 
to be a singular decision, we 
do not support multiple questions 
(e.g. Vote for Admin and Vote for Treasurer) 
in one election.
end note

entity "BallotPaper" as ballotPapers #fbca04 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    * name : TEXT
    description : TEXT | NULL
    * maxVotes : INTEGER
    * maxVotesPerCandidate : INTEGER
    --
    * electionId : Election.id <<FK>>
}

entity "BallotPaperSection" as ballotPaperSections #fbca04 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    * name : TEXT
    description : TEXT | NULL
    * maxVotes : INTEGER
    * maxVotesPerCandidate : INTEGER
    --
    * ballotPaperId : BallotPaper.id <<FK>>
}

entity "BallotPaperSectionCandidate" as ballotPaperSectionCandidates #fbca04 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    --
    * ballotPaperSectionId : BallotPaperSection.id <<FK>>
    * candidateId : Candidate.id <<FK>>
}

entity "Candidate" as candidates #fbca04 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    * title : TEXT
    description : TEXT | NULL
    --
    * electionId : Election.id <<FK>>
}

entity "Vote" as votes #728376 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    alpha : NUMERIC | NULL
    beta : NUMERIC | NULL
    commitmentPart1 : NUMERIC | NULL
    commitmentPart2 : NUMERIC | NULL
    challenge : NUMERIC | NULL
    response : NUMERIC | NULL
    --
    * election : Election.id <<FK>>
    ' if the vote isn't secret, voter can be saved
    voter : voter.id <<FK>> | NULL
}
note as N4
A vote is an encoded json object containing the entire filled in ballot paper.
end note

entity "VoterRegister" as voterRegisters #05DFA3 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    * voted : BOOLEAN
    --
    * ballotPaperId : BallotPaper.id <<FK>>
    * voterId : Voter.id <<FK>>
}

entity "Voter" as voters #05DFA3 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    --
    voterGroupId: VoterGroup.id <<FK>>
}
note as N3
A voter can only get one ballot paper,
and with this one vote per election.
end note

entity "VoterGroup" as voterGroups #05DFA3 {
    * id : UUID <<PK>>
    --
    * createdAt : TIMESTAMPTZ(6)
    * modifiedAt : TIMESTAMPTZ(6)
    * name : TEXT
    description : TEXT | NULL
    pubKey : NUMERIC | NULL
    privKey : NUMERIC | NULL
    moduloRS256 : NUMERIC | NULL
    * voterTokesGenerated : BOOLEAN
    --
}

note as N1
Timestamps are stored in UTC.
end note

user ||--o{ elections
elections ||--o{ ballotPapers
elections -- N2
elections ||--o{ candidates
ballotPapers ||--o{ voterRegisters
voterRegisters }|--|| voters
ballotPapers ||--o{ ballotPaperSections
' ballotPaperSections -- C_2
ballotPaperSections ||--o{ ballotPaperSectionCandidates
ballotPaperSectionCandidates }o--|| candidates
votes }o--|| elections
voters ||--o{ votes
voterGroups ||--|{ voters
voters -- N3
votes -- N4


@enduml