components:
  schemas:
    passwordResetObject:
      type: 'object'
      additionalProperties: false
      required:
        - password
        - token
      properties:
        password:
          description: |
            The strong password set by the user.
            The password must be at least 12 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character.
          type: 'string'
          format: 'password'
          minLength: 12
          maxLength: 128
          pattern: '/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{12,}$/'
          example: 'MyP@ssw0rd!1!'
        token:
          description: |
            The token provided to the user via email.
            This token is used to authenticate and authorize the user.
          type: 'string'
          minLength: 32
          maxLength: 32
          pattern: '^[a-fA-F0-9]{32,32}$'
          example: ABCDEF123456ABCDEF12345612345678
    requestPasswordResetObject:
      type: 'object'
      additionalProperties: false
      required:
        - email
      properties:
        email:
          description: |
            The users email address (represents the username).
            This is the unique identifier for the user.
          type: 'string'
          format: 'email'
          minLength: 5
          maxLength: 256
          pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
          example: 'my.name@email.com'
    userSignUpObject:
      type: 'object'
      additionalProperties: false
      required:
        - email
        - password
      properties:
        email:
          description: |
            The users email address (represents the username).
            This is the unique identifier for the user.
          type: 'string'
          format: 'email'
          minLength: 5
          maxLength: 256
          pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
          example: 'my.name@email.com'
        password:
          description: |
            The strong password set by the user.
            The password must be at least 12 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character.
          type: 'string'
          format: 'password'
          minLength: 12
          maxLength: 128
          pattern: '/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{12,}$/'
          example: 'MyP@ssw0rd!1!'
    userLoginObject:
      type: 'object'
      additionalProperties: false
      required:
        - email
        - password
      properties:
        email:
          description: |
            The users email address (represents the username).
            This is the unique identifier for the user.
          type: 'string'
          format: 'email'
          minLength: 5
          maxLength: 256
          pattern: '^[\w-\.]+@([\w-]+\.)+[\w-]{2,4}$'
          example: 'my.name@email.com'
        password:
          description: |
            The password of the user.
          type: 'string'
          format: 'password'
          example: 'MyP@ssw0rd!1!'
    apiTokenObject:
      type: 'object'
      additionalProperties: false
      required:
        - refreshToken
        - accessToken
      properties:
        refreshToken:
          description: |
            The refresh token of the user.
            This token is used to generate a new access token.
            The refresh token is valid for 7 days.
          type: 'string'
          minLength: 256
          maxLength: 256 # TODO: Update after the implementation
          pattern: '^[a-zA-Z0-9.-_]{256,256}$'
          example: 'Ab234.sadf243-awfgsdf_234sdfg...qawer'
        accessToken:
          description: |
            The access token of the user.
            This token is used to authenticate the user.
            The access token is valid for 15 minutes.
          type: 'string'
          minLength: 256
          maxLength: 256 # TODO: Update after the implementation
          pattern: '^[a-zA-Z0-9.-_]{256,256}$'
          example: 'Ab234.sadf243-awfgsdf_234sdfg...qawer'
    refreshRequestObject:
      type: 'object'
      additionalProperties: false
      required:
        - refreshToken
      properties:
        refreshToken:
          description: |
            The refresh token of the user.
            This token is used to generate a new access and refresh token.
            The refresh token is valid for 7 days.
          type: 'string'
          minLength: 256
          maxLength: 256 # TODO: Update after the implementation
          pattern: '^[a-zA-Z0-9.-_]{256,256}$'
          example: 'Ab234.sadf243-awfgsdf_234sdfg...qawer'
