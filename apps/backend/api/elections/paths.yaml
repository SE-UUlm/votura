components:
  pathItems:
    elections:
      summary: 'Create and read elections'
      description: |
        A election is always at least linked to one user.
        You can create a new one ore read the existing ones.
      get:
        tags:
          - Elections
        summary: 'Get all elections'
        description: |
          Returns all elections with the public information fields, that are linked to user of the API access token.
          If a large number of elections are linked to a user, the response will only return the first 100 elections.
        security:
          - voturaBackendAuth: []
        operationId: 'getElections'
        parameters:
          - name: 'startIndex'
            in: 'query'
            description: |
              If the `startIndex` is not set, the first 100 elections are returned.
              If the `userId` has more than 100 linked elections, the `startIndex` can be adjusted.
              By default the start index is 0, so the first 100 elections (index 0 to 99) are returned.
              In the next request the `startIndex` can be set to 100, so the next 100 elections (index 100 to 199) are returned.
              If the user has no more elections, the response array will only be empty.
            required: false
            schema:
              type: 'integer'
              minimum: 0
              example: 0
              default: 0
        responses:
          '200':
            description: |
              OK.
              The request was successful executed.
              Returns 0 or up to 100 elections for the requested user.
            content:
              application/json:
                schema:
                  type: 'array'
                  items:
                    $ref: './schemas.yaml#/components/schemas/electionReadObject'
          '400':
            $ref: './../globals/responses.yaml#/components/responses/400'
          '401':
            $ref: './../globals/responses.yaml#/components/responses/401'
      put:
        tags:
          - Elections
        summary: 'Create a new election'
        description: |
          Creates a new election with a link to the user of the API access token.
        security:
          - voturaBackendAuth: []
        operationId: 'createElection'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/electionCreateObject'
        responses:
          '201':
            description: |
              Created.
              The request was successful executed.
              Successfully created a new election.
            content:
              application/json:
                schema:
                  $ref: './schemas.yaml#/components/schemas/electionReadObject'
          '400':
            $ref: './../globals/responses.yaml#/components/responses/400'
          '401':
            $ref: './../globals/responses.yaml#/components/responses/401'
    specificElection:
      summary: 'Manage a specific election'
      description: |
        Read, update or delete a specific election.
      parameters:
        - $ref: './parameters.yaml#/components/parameters/electionId'
      get:
        tags:
          - Elections
        summary: 'Get a specific election'
        description: |
          Returns the requested election with all public information fields.
        security:
          - voturaBackendAuth: []
        operationId: 'getElectionById'
        responses:
          '200':
            description: |
              OK.
              The request was successful executed.
              Returns the requested election with all public information fields.
            content:
              application/json:
                schema:
                  $ref: './schemas.yaml#/components/schemas/electionReadObject'
          '400':
            $ref: './../globals/responses.yaml#/components/responses/400'
          '401':
            $ref: './../globals/responses.yaml#/components/responses/401'
          '403':
            $ref: './../globals/responses.yaml#/components/responses/403'
          '404':
            $ref: './../globals/responses.yaml#/components/responses/404'
      post:
        tags:
          - Elections
        summary: 'Update a specific election'
        description: |
          Updates the configuration of the requested election with the provided information.
          The election can only be updated if the election is not frozen.
        security:
          - voturaBackendAuth: []
        operationId: 'updateElectionById'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: './schemas.yaml#/components/schemas/electionCreateObject'
        responses:
          '200':
            description: |
              OK.
              The request was successful executed.
              The election was updated.
            content:
              application/json:
                schema:
                  $ref: './schemas.yaml#/components/schemas/electionReadObject'
          '400':
            $ref: './../globals/responses.yaml#/components/responses/400'
          '401':
            $ref: './../globals/responses.yaml#/components/responses/401'
          '403':
            $ref: './../globals/responses.yaml#/components/responses/403'
          '404':
            $ref: './../globals/responses.yaml#/components/responses/404'
      delete:
        tags:
          - Elections
        summary: 'Delete a specific election'
        description: |
          Deletes the requested election.
          The election will be deleted from the database.
          Not that also all linked data (like votes) will be removed.
        security:
          - voturaBackendAuth: []
        operationId: 'deleteElectionById'
        responses:
          '204':
            description: |
              No Content.
              The request was successful executed.
              The election was deleted.
          '400':
            $ref: './../globals/responses.yaml#/components/responses/400'
          '401':
            $ref: './../globals/responses.yaml#/components/responses/401'
          '403':
            $ref: './../globals/responses.yaml#/components/responses/403'
          '404':
            $ref: './../globals/responses.yaml#/components/responses/404'
    freezeElection:
      summary: 'Freeze a specific election'
      description: |
        Freezes the requested election.
      parameters:
        - $ref: './parameters.yaml#/components/parameters/electionId'
      post:
        tags:
          - Elections
        summary: 'Freeze a specific election'
        description: |
          Freezes the requested election.
          Note that freezing a election is a kind of irreversible action.
          After a election is frozen, the configuration of the election cannot be changed anymore.
          You can not create new voting tokens for your voters.

          After the election is frozen, the key pair for the election will be generated and the election is ready for voting.
          Note that it will take some time until the generated keys are available.

          Your generated voting tokens for your voters are now active and you can distribute them.
        security:
          - voturaBackendAuth: []
        operationId: 'freezeElectionById'
        responses:
          '200':
            description: |
              OK.
              The request was successful executed.
              The election is now frozen.
            content:
              application/json:
                schema:
                  $ref: './schemas.yaml#/components/schemas/electionReadObject'
          '400':
            $ref: './../globals/responses.yaml#/components/responses/400'
          '401':
            $ref: './../globals/responses.yaml#/components/responses/401'
          '403':
            $ref: './../globals/responses.yaml#/components/responses/403'
          '404':
            $ref: './../globals/responses.yaml#/components/responses/404'
    unfreezeElection:
      summary: 'Unfreeze a specific election'
      description: |
        Unfreezes the requested election.
      parameters:
        - $ref: './parameters.yaml#/components/parameters/electionId'
      post:
        tags:
          - Elections
        summary: 'Unfreeze a specific election'
        description: |
          Unfreezes the requested election.
          You can only unfreeze a election if no votes was casted yet, otherwise you will get a 403 error.

          Note that unfreezing a election is a kind of irreversible and destructive action.
          All generated voting tokens will be revoked and the election key pair will be revoked.
        security:
          - voturaBackendAuth: []
        operationId: 'unfreezeElectionById'
        responses:
          '200':
            description: |
              OK.
              The request was successful executed.
              The election was unfrozen.
            content:
              application/json:
                schema:
                  $ref: './schemas.yaml#/components/schemas/electionReadObject'
          '400':
            $ref: './../globals/responses.yaml#/components/responses/400'
          '401':
            $ref: './../globals/responses.yaml#/components/responses/401'
          '403':
            $ref: './../globals/responses.yaml#/components/responses/403'
          '404':
            $ref: './../globals/responses.yaml#/components/responses/404'
